from django.db import models
from datetime import *
import uuid

class Payment(models.Model):
    id = models.CharField(max_length = 50, default = uuid.uuid4, primary_key = True, editable = False)

class PaymentIntent(models.Model):
    id = models.CharField(primary_key=True, max_length=100)
    object = models.CharField(max_length=50, blank=True)
    amount = models.IntegerField(blank=True)
    amount_capturable = models.IntegerField(blank=True)
    amount_received = models.IntegerField(blank=True)
    capture_method = models.CharField(max_length=20, blank=True)
    client_secret = models.CharField(max_length=100, blank=True)
    confirmation_method = models.CharField(max_length=20, blank=True)
    created = models.BigIntegerField(blank=True)
    currency = models.CharField(max_length=10, blank=True)
    description = models.TextField(blank=True, null=True)
    # invoice = models.ForeignKey('Invoice', on_delete=models.SET_NULL, null=True, blank=True)
    # latest_charge = models.ForeignKey('Charge', on_delete=models.SET_NULL, null=True, blank=True)
    livemode = models.BooleanField(default=False, blank=True)
    next_action = models.JSONField(blank=True, null=True)
    payment_method_types = models.JSONField(blank=True)
    receipt_email = models.EmailField(blank=True, null=True)
    # review = models.ForeignKey('Review', on_delete=models.SET_NULL, null=True, blank=True)
    # shipping = models.ForeignKey('Shipping', on_delete=models.SET_NULL, null=True, blank=True)
    statement_descriptor = models.CharField(max_length=100, blank=True, null=True)
    statement_descriptor_suffix = models.CharField(max_length=100, blank=True, null=True)
    status = models.CharField(max_length=50, blank=True)
    transfer_data = models.JSONField(blank=True, null=True)
    transfer_group = models.CharField(max_length=100, blank=True, null=True)
    amount_details = models.JSONField(default=dict, blank=True)
    # application = models.ForeignKey('Application', on_delete=models.SET_NULL, null=True, blank=True)
    application_fee_amount = models.IntegerField(null=True, blank=True)
    automatic_payment_methods = models.JSONField(blank=True, null=True)
    canceled_at = models.DateTimeField(null=True, blank=True)
    cancellation_reason = models.CharField(max_length=100, null=True, blank=True)
    # customer = models.ForeignKey('Customer', on_delete=models.SET_NULL, null=True, blank=True)
    # last_payment_error = models.ForeignKey('PaymentError', on_delete=models.SET_NULL, null=True, blank=True)
    metadata = models.JSONField(default=dict, blank=True)
    # on_behalf_of = models.ForeignKey('User', on_delete=models.SET_NULL, null=True, blank=True)
    # payment_method = models.ForeignKey('PaymentMethod', on_delete=models.SET_NULL, null=True, blank=True)
    payment_method_options = models.JSONField(blank=True, null=True)
    processing = models.JSONField(blank=True, null=True)
    setup_future_usage = models.CharField(max_length=50, null=True, blank=True)
